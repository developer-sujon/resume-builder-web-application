{"version":3,"file":"static/js/701.bfd2324d.chunk.js","mappings":"0NAuHA,UA9GgB,WACd,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,oBAAoB,EACpBC,cAAe,CACbC,MAAO,IAGTC,iBAAkBC,EAAAA,GAAW,CAC3BF,MAAOE,EAAAA,KACJC,SAAS,qBACTC,QACC,gDACA,2BAINC,SAAU,SAACC,GACTC,EAAAA,EAAAA,gBAA4BD,EAAON,OAAOQ,MAAK,SAACC,GAC1CA,GACFf,EAAS,cAEZ,GACF,IAGH,OACE,oBAASgB,UAAU,8BAAnB,UACE,gBAAKA,UAAU,kFAAf,UACE,iBAAKA,UAAU,qHAAf,WACE,eAAIA,UAAU,gGAAd,oCAGA,cAAGA,UAAU,8CAAb,sGAIA,kBACEA,UAAU,sCACVL,SAAUT,EAAOe,aAFnB,WAIE,4BACE,kBACEC,QAAQ,QACRF,UAAU,+DAFZ,yBAMA,kBACEG,KAAK,QACLC,KAAK,QACLC,GAAG,QACHL,UAAU,yQACVM,YAAY,mBACZC,SAAUrB,EAAOsB,aACjBC,OAAQvB,EAAOwB,WACfC,MAAOzB,EAAOU,OAAON,QAGtBJ,EAAO0B,QAAQtB,OACdJ,EAAO2B,OAAOvB,OACdwB,EAAAA,EAAAA,QAAuB5B,EAAO2B,OAAOvB,WAEzC,iBAAKU,UAAU,mBAAf,WACE,gBAAKA,UAAU,wBAAf,UACE,kBACEK,GAAG,QACH,mBAAiB,QACjBF,KAAK,WACLH,UAAU,mLAGd,gBAAKA,UAAU,eAAf,UACE,mBACEE,QAAQ,QACRF,UAAU,8CAFZ,yBAIe,KACb,SAAC,KAAD,CACEA,UAAU,+DACVe,GAAG,wBAFL,2CASN,mBACEZ,KAAK,SACLH,UAAU,8NAFZ,6BAMA,eAAGA,UAAU,sDAAb,qCAC2B,KACzB,SAAC,KAAD,CACEe,GAAG,SACHf,UAAU,+DAFZ,oCAYb,C,uDCrHKc,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CAsBH,OAtBGA,EAAAA,EAAAA,GAAAA,EAAAA,KAAAA,CAAAA,CAAAA,IAAAA,UAAAA,MACJ,SAAeH,GACb,OAAOA,EAAMK,QAAU,CACxB,wBACD,SAAeL,GAEb,MADiB,gDACCM,KAAKN,EACxB,yBACD,SAAgBA,GAEd,MADkB,gDACCM,KAAKN,EACzB,wBAED,SAAeA,GACb,OACE,cACEN,GAAG,oBACHL,UAAU,8CAFZ,SAIGW,GAGN,OAtBGG,GAyBN,K","sources":["components/AccountRecovery/SendOtp.jsx","helper/FormValidation.js"],"sourcesContent":["//External lib Import\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n//Internal  lib import\r\nimport FormValidation from \"../../helper/FormValidation\";\r\nimport UserRequest from \"../../APIRequest/UserRequest\";\r\n\r\nconst SendOtp = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      Email: \"\",\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      Email: Yup.string()\r\n        .required(\"Email is Required\")\r\n        .matches(\r\n          /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n          \"Invalid Email address\",\r\n        ),\r\n    }),\r\n\r\n    onSubmit: (values) => {\r\n      UserRequest.SendRecoveryOtp(values.Email).then((result) => {\r\n        if (result) {\r\n          navigate(\"/verify-otp\");\r\n        }\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\r\n        <div className=\"w-full p-6 bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md dark:bg-gray-800 dark:border-gray-700 sm:p-8\">\r\n          <h1 className=\"mb-1 text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\r\n            Forgot your password?\r\n          </h1>\r\n          <p className=\"font-light text-gray-500 dark:text-gray-400\">\r\n            Don't fret! Just type in Your Email and we will send you a code to\r\n            reset your password!\r\n          </p>\r\n          <form\r\n            className=\"mt-4 space-y-4 lg:mt-5 md:space-y-5\"\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <div>\r\n              <label\r\n                htmlFor=\"email\"\r\n                className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n              >\r\n                Your Email\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"Email\"\r\n                id=\"email\"\r\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-600 focus:border-blue-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                placeholder=\"name@example.com\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.Email}\r\n              />\r\n\r\n              {formik.touched.Email &&\r\n                formik.errors.Email &&\r\n                FormValidation.isError(formik.errors.Email)}\r\n            </div>\r\n            <div className=\"flex items-start\">\r\n              <div className=\"flex items-center h-5\">\r\n                <input\r\n                  id=\"terms\"\r\n                  aria-describedby=\"terms\"\r\n                  type=\"checkbox\"\r\n                  className=\"w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-blue-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-blue-600 dark:ring-offset-gray-800\"\r\n                />\r\n              </div>\r\n              <div className=\"ml-3 text-sm\">\r\n                <label\r\n                  htmlFor=\"terms\"\r\n                  className=\"font-light text-gray-500 dark:text-gray-300\"\r\n                >\r\n                  I accept the{\" \"}\r\n                  <Link\r\n                    className=\"font-medium text-blue-600 hover:underline dark:text-blue-500\"\r\n                    to=\"/terms-and-conditions\"\r\n                  >\r\n                    Terms and Conditions\r\n                  </Link>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n            >\r\n              Reset password\r\n            </button>\r\n            <p className=\"text-sm font-light text-gray-500 dark:text-gray-400\">\r\n              Already have an account?{\" \"}\r\n              <Link\r\n                to=\"/login\"\r\n                className=\"font-medium text-blue-600 hover:underline dark:text-blue-500\"\r\n              >\r\n                Login here\r\n              </Link>\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SendOtp;\r\n","class FormValidation {\r\n  static isEmpty(value) {\r\n    return value.length <= 0;\r\n  }\r\n  static isEmail(value) {\r\n    let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return regexEmail.test(value);\r\n  }\r\n  static isMobile(value) {\r\n    let regexMobile = /(^(\\+88|0088|88)?(01){1}[3456789]{1}(\\d){8})$/;\r\n    return regexMobile.test(value);\r\n  }\r\n\r\n  static isError(value) {\r\n    return (\r\n      <p\r\n        id=\"filled_error_help\"\r\n        className=\"mt-2 text-md text-red-600 dark:text-red-400\"\r\n      >\r\n        {value}\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormValidation;\r\n"],"names":["navigate","useNavigate","formik","useFormik","enableReinitialize","initialValues","Email","validationSchema","Yup","required","matches","onSubmit","values","UserRequest","then","result","className","handleSubmit","htmlFor","type","name","id","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","FormValidation","to","length","test"],"sourceRoot":""}