{"version":3,"file":"static/js/375.05a145b0.chunk.js","mappings":"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","sources":["APIRequest/AuthRequest.js","components/Auth/RegisterUser.jsx"],"sourcesContent":["//Internal Import\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogin } from \"../redux/slices/AuthSlice\";\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\n\r\nclass AuthRequest {\r\n  static async RegisterUser(postBody) {\r\n    const { data } = await RestClient.postRequest(\r\n      \"/Auth/RegisterUser\",\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      SessionHelper.SetVerifyEmail(postBody.Email);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async LoginUser(postBody) {\r\n    const { data } = await RestClient.postRequest(\"/Auth/LoginUser\", postBody);\r\n\r\n    if (data) {\r\n      store.dispatch(SetLogin(data?.accessToken));\r\n      ToastMessage.successMessage(\"User Login Successfull\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default AuthRequest;\r\n","//External Import\r\nimport { ErrorMessage, Field, Form, Formik, FormikProps } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\nimport \"react-phone-number-input/style.css\";\r\nimport AuthRequest from \"../../APIRequest/AuthRequest\";\r\n\r\n//Internal Import\r\nconst validationSchema = Yup.object().shape({\r\n  FirstName: Yup.string().required(\"First Name is Required\"),\r\n  LastName: Yup.string().required(\"Last Name is Required\"),\r\n  Gender: Yup.string().required(\"Gender is Required\"),\r\n  PreferredAreas: Yup.string().required(\"Preferred Areas is Required\"),\r\n  Email: Yup.string()\r\n    .required(\"Email is Required\")\r\n    .matches(\r\n      /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n      \"Invalid Email address\",\r\n    ),\r\n\r\n  Password: Yup.string().required(\"Password is Required\"),\r\n  ConfirmPassword: Yup.string()\r\n    .required(\"Confirm Password is required\")\r\n    .oneOf(\r\n      [Yup.ref(\"Password\"), null],\r\n      \"Passwords and Confirm Password must match\",\r\n    ),\r\n});\r\n\r\nconst RegisterUser = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto min-h-screen lg:py-0\">\r\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-xl xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\r\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\r\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\r\n              Create a new account\r\n            </h1>\r\n            <Formik\r\n              initialValues={{\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                Gender: \"\",\r\n                PreferredAreas: \"\",\r\n                Phone: \"\",\r\n                Email: \"\",\r\n                Password: \"\",\r\n                ConfirmPassword: \"\",\r\n              }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(values, actions) => {\r\n                AuthRequest.RegisterUser(values).then((result) => {\r\n                  if (result) {\r\n                    navigate(\"/login\");\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              {(props: FormikProps<any>) => (\r\n                <Form>\r\n                  <div className=\"flex flex-wrap mx-[-15px] my-3\">\r\n                    <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                      <MyInput\r\n                        name=\"FirstName\"\r\n                        label=\"First Name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Mohammad\"\r\n                        require={true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                      <MyInput\r\n                        name=\"LastName\"\r\n                        label=\"Last Name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Salman\"\r\n                        require={true}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-wrap mx-[-15px]  my-3\">\r\n                    <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                      <label className=\"mb-2\">\r\n                        Gender\r\n                        <span className=\"text-red-600 ml-1\">*</span>\r\n                      </label>\r\n                      <div className=\"flex items-center mr-4\">\r\n                        <label>\r\n                          <Field\r\n                            type=\"radio\"\r\n                            name=\"Gender\"\r\n                            value=\"Male\"\r\n                            className=\"mx-1\"\r\n                          />\r\n                          Male\r\n                        </label>\r\n                        <label>\r\n                          <Field\r\n                            type=\"radio\"\r\n                            name=\"Gender\"\r\n                            value=\"Frmale\"\r\n                            className=\"mx-1\"\r\n                          />\r\n                          Frmale\r\n                        </label>\r\n                        <label>\r\n                          <Field\r\n                            type=\"radio\"\r\n                            name=\"Gender\"\r\n                            value=\"Other\"\r\n                            className=\"mx-1\"\r\n                          />\r\n                          Other\r\n                        </label>\r\n                      </div>\r\n                      <p\r\n                        id=\"filled_error_help\"\r\n                        className=\"mt-2 text-md text-red-600 dark:text-red-400\"\r\n                      >\r\n                        <ErrorMessage name=\"Gender\" />\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                      <MySelectField\r\n                        name=\"PreferredAreas\"\r\n                        label=\"Select your skill from following list\"\r\n                        require={true}\r\n                        options={[\r\n                          {\r\n                            label: \"Accounting/Finance\",\r\n                            value: \"AccountingFinance\",\r\n                          },\r\n                          {\r\n                            label: \"Bank/Non-Bank Fin. Institution\",\r\n                            value: \"BankNonBankFinInstitution\",\r\n                          },\r\n                          {\r\n                            label: \"Commercial/Supply Chain\",\r\n                            value: \"CommercialSupplyChain\",\r\n                          },\r\n                          {\r\n                            label: \"Education/Training\",\r\n                            value: \"EducationTraining\",\r\n                          },\r\n                          {\r\n                            label: \"Engineer/Architect\",\r\n                            value: \"EngineerArchitect\",\r\n                          },\r\n                          {\r\n                            label: \"Garments/ Textile\",\r\n                            value: \"GarmentsTextile\",\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-wrap mx-[-15px]  my-3\">\r\n                    <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                      <label className=\"mb-2 block\">\r\n                        Mobile\r\n                        <span className=\"text-red-600 ml-1\">*</span>\r\n                      </label>\r\n                      <Field name=\"Phone\">\r\n                        {({\r\n                          field,\r\n                          form: { touched, errors, setFieldValue, values },\r\n                          meta,\r\n                        }) => (\r\n                          <>\r\n                            <PhoneInput\r\n                              type=\"tel\"\r\n                              placeholder=\"Enter phone number\"\r\n                              name={field?.name}\r\n                              value={field?.value}\r\n                              onChange={(phone, country) =>\r\n                                setFieldValue(\"Phone\", phone)\r\n                              }\r\n                              required\r\n                            />\r\n                            {meta.touched && meta.error && (\r\n                              <p\r\n                                id=\"filled_error_help\"\r\n                                className=\"mt-2 text-md text-red-600 dark:text-red-400\"\r\n                              >\r\n                                {meta.error}\r\n                              </p>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </Field>\r\n                    </div>\r\n                    <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                      <MyInput\r\n                        name=\"Email\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        require={true}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-wrap mx-[-15px] my-3\">\r\n                    <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                      <MyInput\r\n                        name=\"Password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        placeholder=\"******\"\r\n                        require={true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                      <MyInput\r\n                        name=\"ConfirmPassword\"\r\n                        label=\"Confirm Password\"\r\n                        type=\"password\"\r\n                        placeholder=\".....\"\r\n                        require={true}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"w-full text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n                  >\r\n                    Sign Up\r\n                  </button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegisterUser;\r\n\r\nconst MyInput = ({ name, label, type, placeholder }) => {\r\n  return (\r\n    <>\r\n      <Field name={name}>\r\n        {({ field, form: { touched, errors }, meta }) => (\r\n          <>\r\n            <label\r\n              htmlFor={name}\r\n              className=\" my-2 md:my-0 md:mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n            >\r\n              {label}\r\n            </label>\r\n            {require && <span className=\"text-red-600 ml-1\">*</span>}\r\n            <input\r\n              type={type}\r\n              id={name}\r\n              placeholder={placeholder}\r\n              {...field}\r\n              className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-600 focus:border-blue-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n            />\r\n            {meta.touched && meta.error && (\r\n              <p\r\n                id=\"filled_error_help\"\r\n                className=\"mt-2 text-md text-red-600 dark:text-red-400\"\r\n              >\r\n                {meta.error}\r\n              </p>\r\n            )}\r\n          </>\r\n        )}\r\n      </Field>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MySelectField = ({ name, label, require, options }) => {\r\n  return (\r\n    <>\r\n      <label\r\n        htmlFor=\"PreferredAreas\"\r\n        className=\"inline-block my-3 md:my-0 md:mb-2 text-sm font-medium text-gray-900 dark:text-white \"\r\n      >\r\n        {label}\r\n      </label>\r\n\r\n      {require && <span className=\"text-red-600 ml-1\">*</span>}\r\n\r\n      <Field\r\n        id=\"PreferredAreas\"\r\n        name=\"PreferredAreas\"\r\n        as=\"select\"\r\n        className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n      >\r\n        {options.map((option, i) => (\r\n          <option value={option.value} key={i}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </Field>\r\n    </>\r\n  );\r\n};\r\n"],"names":["AuthRequest","postBody","RestClient","data","ToastMessage","message","SessionHelper","Email","store","SetLogin","accessToken","validationSchema","Yup","shape","FirstName","required","LastName","Gender","PreferredAreas","matches","Password","ConfirmPassword","oneOf","navigate","useNavigate","className","initialValues","Phone","onSubmit","values","actions","then","result","props","MyInput","name","label","type","placeholder","require","value","id","MySelectField","options","field","form","setFieldValue","touched","errors","meta","onChange","phone","country","error","htmlFor","as","map","option","i"],"sourceRoot":""}