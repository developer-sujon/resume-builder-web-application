{"version":3,"file":"static/js/663.3ff55f5a.chunk.js","mappings":"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","sources":["APIRequest/AuthRequest.js","components/Auth/LoginUser.jsx","helper/FormValidation.js"],"sourcesContent":["//Internal Import\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogin } from \"../redux/slices/AuthSlice\";\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\n\r\nclass AuthRequest {\r\n  static async RegisterUser(postBody) {\r\n    const { data } = await RestClient.postRequest(\r\n      \"/Auth/RegisterUser\",\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      SessionHelper.SetVerifyEmail(postBody.Email);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async LoginUser(postBody) {\r\n    const { data } = await RestClient.postRequest(\"/Auth/LoginUser\", postBody);\r\n\r\n    if (data) {\r\n      store.dispatch(SetLogin(data?.accessToken));\r\n      ToastMessage.successMessage(\"User Login Successfull\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default AuthRequest;\r\n","//External Import\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n//Internal Import\r\nimport FormValidation from \"../../helper/FormValidation\";\r\nimport AuthRequest from \"../../APIRequest/AuthRequest\";\r\n\r\nconst LoginUser = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Email: \"\",\r\n      Password: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      Email: Yup.string()\r\n        .required(\"Email is Required\")\r\n        .matches(\r\n          /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n          \"Invalid Email address\",\r\n        ),\r\n      Password: Yup.string().required(\"Password is Required\"),\r\n    }),\r\n\r\n    onSubmit: (values) => {\r\n      AuthRequest.LoginUser(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto min-h-screen lg:py-0\">\r\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\r\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\r\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\r\n              Sign in to your account\r\n            </h1>\r\n            <form\r\n              className=\"space-y-4 md:space-y-6\"\r\n              onSubmit={formik.handleSubmit}\r\n            >\r\n              <div>\r\n                <label\r\n                  htmlFor=\"Email\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                >\r\n                  Email\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"Email\"\r\n                  id=\"Email\"\r\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-600 focus:border-blue-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                  placeholder=\"salman12\"\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  value={formik.values.Email}\r\n                />\r\n\r\n                {formik.touched.Email &&\r\n                  formik.errors.Email &&\r\n                  FormValidation.isError(formik.errors.Email)}\r\n              </div>\r\n              <div>\r\n                <label\r\n                  htmlFor=\"password\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                >\r\n                  Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"Password\"\r\n                  id=\"password\"\r\n                  placeholder=\"••••••••\"\r\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-600 focus:border-blue-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  value={formik.values.Password}\r\n                />\r\n                {formik.touched.Password &&\r\n                  formik.errors.Password &&\r\n                  FormValidation.isError(formik.errors.Password)}\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-start\">\r\n                  <div className=\"flex items-center h-5\">\r\n                    <input\r\n                      id=\"remember\"\r\n                      aria-describedby=\"remember\"\r\n                      type=\"checkbox\"\r\n                      className=\"w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-blue-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-blue-600 dark:ring-offset-gray-800\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"ml-3 text-sm\">\r\n                    <label\r\n                      htmlFor=\"remember\"\r\n                      className=\"text-gray-500 dark:text-gray-300\"\r\n                    >\r\n                      Remember me\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <Link\r\n                  to=\"/forgot-password\"\r\n                  className=\"text-sm font-medium text-blue-600 hover:underline dark:text-blue-500\"\r\n                >\r\n                  Forgot password?\r\n                </Link>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n              >\r\n                Sign in\r\n              </button>\r\n              <p className=\"text-sm font-light text-gray-500 dark:text-gray-400\">\r\n                Don’t have an account yet?{\" \"}\r\n                <Link\r\n                  to=\"/register\"\r\n                  className=\"font-medium text-blue-600 hover:underline dark:text-blue-500\"\r\n                >\r\n                  Sign up\r\n                </Link>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginUser;\r\n","class FormValidation {\r\n  static isEmpty(value) {\r\n    return value.length <= 0;\r\n  }\r\n  static isEmail(value) {\r\n    let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return regexEmail.test(value);\r\n  }\r\n  static isMobile(value) {\r\n    let regexMobile = /(^(\\+88|0088|88)?(01){1}[3456789]{1}(\\d){8})$/;\r\n    return regexMobile.test(value);\r\n  }\r\n\r\n  static isError(value) {\r\n    return (\r\n      <p\r\n        id=\"filled_error_help\"\r\n        className=\"mt-2 text-md text-red-600 dark:text-red-400\"\r\n      >\r\n        {value}\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormValidation;\r\n"],"names":["AuthRequest","postBody","RestClient","data","ToastMessage","message","SessionHelper","Email","store","SetLogin","accessToken","formik","useFormik","initialValues","Password","validationSchema","Yup","required","matches","onSubmit","values","className","handleSubmit","htmlFor","type","name","id","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","FormValidation","to","length","test"],"sourceRoot":""}